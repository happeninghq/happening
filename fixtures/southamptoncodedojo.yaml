# This includes historical data from the Southampton Code Dojo

# Events
- model: events.Event
  pk: 1
  fields:
    datetime: "2014-04-11 19:00:00+00:00"
    challenge_language: Python
    challenge_title: Battleships
    challenge_text: This month's challenge was to implement a Battleships AI in Python. These AIs played against each other using the [Battleships competition](https://github.com/southampton-code-dojo/battleships) created for this dojo.
    solution_text: One group attempted a too complicated solution and didn't finish (though their solution probably would have won if it did). This left four AIs competing in the competition.
    image: /media/event_images/report1-result.jpg

- model: events.EventSolution
  pk: 1
  fields:
    event: 1
    team_name: Team 5
    github_url: https://github.com/southampton-code-dojo/battleships/blob/southampton-code-dojo-1/team5.py
    description: Came in third place. This code placed ships in specific places, and ensured that it didn't shoot at the same place twice.

- model: events.EventSolution
  pk: 2
  fields:
    event: 1
    team_name: Lucky Number
    github_url: https://github.com/southampton-code-dojo/battleships/blob/southampton-code-dojo-1/luckynumber.py
    description: Came in second place. This code had two different placements of ships, and attacked in multiple modes (attack_directed, attack_undirected, or search)

- model: events.EventSolution
  pk: 3
  fields:
    event: 1
    team_name: Beetleships
    github_url: https://github.com/southampton-code-dojo/battleships/blob/southampton-code-dojo-1/beetleships.py
    description: The winner. This code placed ships randomly except it favoured placing ships "against" the edge of the board, and shot in order from top-left to bottom-right until it hit something, then destroyed the ship before continuing.

- model: events.Event
  pk: 2
  fields:
    datetime: "2014-05-08 19:00:00+00:00"
    challenge_language: Python
    challenge_title: Daily Mail Headline Generator
    challenge_text: This month's challenge was to create a Daily Mail headline generator in Python.
    solution_text: Most groups attempted some sort of templating, though they all went about it in different ways.

- model: events.EventSolution
  pk: 4
  fields:
    event: 2
    team_name: Team 1
    github_url: https://github.com/southampton-code-dojo/daily-mail-headlines/tree/master/team1
    description: This code created markov chains to generate the headlines, based on scraped Daily Mail headlines, then injected the new headlines back into the page. It mostly generated nonsense but some of the headlines where pretty good.

- model: events.EventSolution
  pk: 5
  fields:
    event: 2
    team_name: Team 2
    github_url: https://github.com/southampton-code-dojo/daily-mail-headlines/tree/master/team2
    description: This code used a templating approach which disstilled a good Daily Mail headline down to "blame", "verbs", "values", and "threats". It linked these together with five possible templates (e.g. (blame) (verb) (value)) and then injected that headline into a page with the Daily Mail header.

- model: events.Event
  pk: 3
  fields:
    datetime: "2014-06-12 19:00:00+00:00"
    # eventbrite_url: http://southamptoncodedojo3.eventbrite.co.uk
    challenge_language: Javascript
    challenge_title: Mastermind
    challenge_text: This month's challenge was more open than usual - and involved implementing the game [Mastermind](http://en.wikipedia.org/wiki/Mastermind_(board_game)), for either one or two players. Everything else was left up to the participants.
    solution_text: All groups except one managed to produce a version of Mastermind where the user can guess the code selected by the computer. Some groups used HTML tables for the UI, with CSS border-radius for the pegs, and at least one used canvas to draw the interface.
    image: /media/event_images/report3-result.jpg

- model: events.EventSolution
  pk: 6
  fields:
    event: 3
    team_name: Group 1
    github_url: https://github.com/sinjax/mastermind
    description: This group did not complete, having split up into too many subgroups, and was unable to bring the whole thing together in the end. Afterwards, one team member did successfully implement Donald Knuth's five guess algorithm but this wasn't completed in time to be demoed on the night.

- model: events.EventSolution
  pk: 7
  fields:
    event: 3
    team_name: Group 2
    github_url: https://github.com/southampton-code-dojo/mastermind-june-2014-dojo
    description: This group created a version of the game using tables for layout with border-radius to represent pegs, where the player can click the pegs to make their guess.

- model: events.Event
  pk: 4
  fields:
    datetime: "2014-07-10 19:00:00+00:00"
    challenge_language: Python
    challenge_title: Roman Numeral Calculator
    challenge_text: This month's challenge was to implement a Roman Numerals calculator in Python. The challenge was open in that people could decide how it should work, how the user should interface with it, etc.
    image: /media/event_images/report4-result.jpg

- model: events.EventSolution
  pk: 8
  fields:
    event: 4
    team_name: Group 1
    github_url: https://github.com/patrickmcsweeney/romancalc

- model: events.EventSolution
  pk: 9
  fields:
    event: 4
    team_name: Group 2
    github_url: https://gist.github.com/jscott1989/809c69e5547e9a58ef1b

- model: events.EventSolution
  pk: 10
  fields:
    event: 4
    team_name: Group 4
    github_url: https://gist.github.com/andrew804/b56395a24827fc71241e

- model: events.Event
  pk: 5
  fields:
    datetime: "2014-08-14 19:00:00+00:00"
    # eventbrite_url: http://southamptoncodedojo5.eventbrite.co.uk
    challenge_language: Java
    challenge_title: Countdown Solver
    challenge_text: This month's challenge was to implement a Countdown numbers round solver in Java. The idea was taken from [Ruby Quiz 7](http://rubyquiz.com/quiz7.html) so you can go there for more details and to see some example answers where they had longer to work on them.
    image: /media/event_images/report5-result.jpg

- model: events.EventSolution
  pk: 11
  fields:
    event: 5
    team_name: Solution 1
    github_url: https://github.com/southampton-code-dojo/countdown_numbers

- model: events.Event
  pk: 6
  fields:
    datetime: "2014-09-11 19:00:00+00:00"
    challenge_language: Javascript
    challenge_title: Sodoku Solver
    challenge_text: This month's challenge was to implement a Sodoku solver in Javascript. We left the choice of using Node or doing it in-browser up to the groups.
    image: /media/event_images/report6-result.jpg

- model: events.EventSolution
  pk: 12
  fields:
    event: 6
    team_name: Solution 1
    github_url: https://github.com/southampton-code-dojo/js-sudoku

- model: events.EventSolution
  pk: 13
  fields:
    event: 6
    team_name: Solution 2
    github_url: https://github.com/southampton-code-dojo/sudoku

- model: events.EventSolution
  pk: 14
  fields:
    event: 6
    team_name: Solution 3
    github_url: https://github.com/southampton-code-dojo/CodeDojoSudokuSolver

- model: events.Event
  pk: 7
  fields:
    datetime: "2014-10-09 19:00:00+00:00"
    challenge_language: Java
    challenge_title: Minesweeper AI
    challenge_text: This month's challenge was to implement a Minesweeper AI using Java. We had a pre-prepared engine and API that everyone could code to - so teams were only responsible for implementing the actual logic of choosing which space to click on next.
    solution_text:
        At the end of the dojo we played the entries against each other, starting on a small map(9*9, 10 mines), then medium (16*16, 40 mines), then large(22*22, 99 mines). Two teams failed in the first round, One in the second, and neither of our finalists were able to complete the final round.

        Everyone went for basically the same solution - which was to first check if any coordinates had a number which matched the number of surrounding spaces (in which case, flag them all) or had a number equal to the surrounding flags (in which case, click on the non-flagged spaces). After this, there was talk of trying to take into account patterns which were only visible when looking at multiple coordinates at once, or using some statistical methods to pick the best choice. Nobody really had time for that though so it was mostly random at this stage.
    image: /media/event_images/report7-result.jpg

- model: events.EventSolution
  pk: 15
  fields:
    event: 7
    team_name: Group 1
    github_url: https://github.com/southampton-code-dojo/minesweeper/blob/october-dojo/src/com/southamptoncodedojo/minesweeper/players/TeamOnePlayer.java

- model: events.EventSolution
  pk: 16
  fields:
    event: 7
    team_name: Group 2
    github_url: https://github.com/southampton-code-dojo/minesweeper/blob/october-dojo/src/com/southamptoncodedojo/minesweeper/players/OrderedPlayer.java

- model: events.EventSolution
  pk: 17
  fields:
    event: 7
    team_name: Group 3
    github_url: https://github.com/southampton-code-dojo/minesweeper/blob/october-dojo/src/com/southamptoncodedojo/minesweeper/players/UltraSuperPlayer.java

- model: events.EventSolution
  pk: 18
  fields:
    event: 7
    team_name: Group 4
    github_url: https://github.com/southampton-code-dojo/minesweeper/blob/october-dojo/src/com/southamptoncodedojo/minesweeper/players/SuperPlayer.java

- model: events.EventSolution
  pk: 19
  fields:
    event: 7
    team_name: Group 5
    github_url: https://github.com/southampton-code-dojo/minesweeper/blob/october-dojo/src/com/southamptoncodedojo/minesweeper/players/CornerPlayer.java

- model: events.Event
  pk: 8
  fields:
    datetime: "2014-11-13 19:00:00+00:00"
    # eventbrite_url: http://southamptoncodedojo8.eventbrite.co.uk
    challenge_language: Python
    challenge_title: Poetry Generator
    challenge_text: We started out by attempting to run a pre-prepared challenge, however networking issues put an end to that and we voted on a replacement task - we decided to develop poetry generators.
    solution_text: This dojo was unique in that we had totally different solutions from each of the groups. Many generated Haikus but did so in different ways, and some generated entirely different forms of poetry. 
    image: /media/event_images/report8-result.jpg

- model: events.EventSolution
  pk: 20
  fields:
    event: 8
    team_name: Group 1
    github_url: https://github.com/mikejewell/dojo-poetry

- model: events.EventSolution
  pk: 21
  fields:
    event: 8
    team_name: Group 2
    github_url: https://github.com/highflying/poem-generator

- model: events.EventSolution
  pk: 22
  fields:
    event: 8
    team_name: Group 3
    github_url: https://github.com/priyankasingh/haiku

- model: events.EventSolution
  pk: 23
  fields:
    event: 8
    team_name: Group 4
    github_url: https://gist.github.com/jscott1989/366a868de420b648ab51

- model: events.EventSolution
  pk: 24
  fields:
    event: 8
    team_name: Group 5
    github_url: https://github.com/rprince/poetry-november-2014-dojo

- model: events.Event
  pk: 9
  fields:
    datetime: "2014-12-04 19:00:00+00:00"
    # eventbrite_url: http://southamptoncodedojo9.eventbrite.co.uk
    challenge_language: C
    challenge_title: Secret Santa Organiser
    challenge_text:
        We decided to solve the [Secret Santas](http://rubyquiz.com/quiz2.html) challenge from RubyQuiz. In our version of this challenge, the teams were given a .txt file with a list of people's names (firstname SPACE lastname NEWLINE).

        The teams had to write a C program which would input this list, and print out a list of secret santa allocations. Every person should give one gift and get one gift, and people cannot be santa for people with the same surname as themselves.
    solution_text: A lot of the teams lacked much C experience, so this dojo took a while to get going. But in the end almost everyone managed to pull together something good. A few teams submitted code which worked by hill climbing, one used a circular linked list, and one grouped by family then assigned downwards.
    image: /media/event_images/report9-result.jpg

- model: events.EventSolution
  pk: 25
  fields:
    event: 9
    team_name: Group 1
    github_url: https://github.com/jscott1989/DecDojo
- model: events.EventSolution
  pk: 26
  fields:
    event: 9
    team_name: Group 2
    github_url: https://github.com/steppers/Dec-2014-Southampton-CodeDojo
- model: events.EventSolution
  pk: 27
  fields:
    event: 9
    team_name: Group 3
    github_url: https://github.com/rprince/secret-santa-december-2014-dojo
- model: events.EventSolution
  pk: 28
  fields:
    event: 9
    team_name: Group 5
    github_url: https://github.com/nbojinov/CodoDojo

# Pages
- model: pages.Page
  pk: 1
  fields:
    url: about
    title: About Southampton Code Dojo
    path: About/About
    content: |
        ## About
        
        ### Who are we?

        The Southampton Code Dojo is a monthly meetup of technical people from around the Southampton area.


        We meet on the second Thursday of each month, decide on a small challenge to work on, split up into groups and solve the problem separately, then come together and talk about the different ways we solved it.


        It's a good way of improving our coding abilities by learning from each other, it's a lot of fun, and programmers of any ability are welcome.


        ### Who are you?
        We welcome anyone with an interest in coding. We have members ranging from the very experienced to no experience at all, in languages from D to Javascript.


        We decide on the programming language to use on the day of the dojo, and will tend to choose languages most familiar to those attending. Whatever your experience level please feel free to come along.
- model: pages.Page
  pk: 2
  fields:
    url: sponsorship
    title: Southampton Code Dojo Sponsorship
    path: About/Sponsorship
    content: |
        ## Our Sponsors
        The dojo exists to create a place for Southampton's technical community to come together. The attendees are different to those who attend typical hack events, as the dojo starts at 7pm and lasts for only two hours, which allows for a much wider range of people to attend.


        We hope that the dojo, as well as being a place for these people to meet, will become a place for them to connect to businesses in need of developers. At any given point very few of the attendees are unemployed but making these connections now means that, when they are, they already know of high quality employers and the employers know what they can do.


        Ideally, we'd like sponsors to commit to three or four dojos per year, which will allow us stability and to ensure that the dojo will continue long term. One-off sponsors are also welcomed but are more difficult to manage.


        ### Why do we need sponsorship?
        Running a dojo costs around £130. This covers pizza and drinks for 25-30 people.


        We have considered charging for tickets to cover this instead, and that's something we'll continue to discuss, but we want to remove as many hurdles as possible for good developers to attend the dojo.


        ### What's in it for the sponsors?
        By sponsoring the dojo, an organisation gains awareness amongst skilled and motivated technical people. Unmotivated students and developers tend not to attend programming events out of hours.


        As a sponsor, we will promote your organisation on our emails, facebook group, meetup group, twitter account, website, and tickets in the lead up to the event(s) that you sponsor. You are welcome to have a member of your staff (or yourself) attend the event and say a few words at the beginning about your organisation, which helps increase awareness and gives an idea of the skills of the attendees.


        If in the future your organisation needs technical staff, either permanent or as a contractor or freelancer, you can contact us and we will relay that to the attendees. This has already paid dividends for our previous sponsors.


        Less directly than that - supporting intiatives such as the dojo helps to foster a better technical community in Southampton which is good for all technical businesses in the area.


        ### Get in touch
        If you or your organisation are interested in sponsoring the dojo, come along to [our next meetup](/#next) or [drop us an email](mailto:admin@southamptoncodedojo.com).